var searchIndex = JSON.parse('{\
"rust_ore":{"doc":"","t":"AAAAAAAAADLLLLLLLMLMMLLLLENNNNNLLLLLLLLLDLLLLMLMMLLLLIDLLMLLMLMLLLLLLLLLLLLLDLLLLLLLLMLCCCCCCDLLMLLMLLLLLLRRFFFFFFF","n":["client","client_state","config","entity","mc_packet","player","prelude","server","util","Client","borrow","borrow_mut","from","handle_handshake","handle_login","into","new","player","run","state","stream","try_from","try_into","type_id","vzip","ClientState","Configuration","Handshake","Login","Play","Status","borrow","borrow_mut","from","from","into","try_from","try_into","type_id","vzip","ServerConfig","borrow","borrow_mut","default","from","host","into","online_mode","port","try_from","try_into","type_id","vzip","Entity","MCPacket","borrow","borrow_mut","data","finalize","from","id","into","length","new","parse","read_string","read_unsigned_short","read_varint","read_varlong","try_from","try_into","type_id","vzip","write_string","write_varint","write_varlong","Player","borrow","borrow_mut","default","from","into","try_from","try_into","type_id","username","vzip","Client","ClientState","Entity","MCPacket","Player","Server","Server","borrow","borrow_mut","config","from","into","listener","new","run","try_from","try_into","type_id","vzip","CONTINUE_BIT","SEGMENT_BITS","read_string","read_u16","read_varint","read_varlong","write_string","write_varint","write_varlong"],"q":[[0,"rust_ore"],[9,"rust_ore::client"],[25,"rust_ore::client_state"],[40,"rust_ore::config"],[53,"rust_ore::entity"],[54,"rust_ore::mc_packet"],[76,"rust_ore::player"],[87,"rust_ore::prelude"],[93,"rust_ore::server"],[106,"rust_ore::util"],[115,"std::net::tcp"],[116,"core::error"],[117,"alloc::boxed"],[118,"core::result"],[119,"core::any"],[120,"alloc::vec"],[121,"alloc::string"],[122,"core::option"]],"d":["","","","","","","","","","","","","Returns the argument unchanged.","Handle handshaking","Handle the Login process","Calls <code>U::from(self)</code>.","Creates a new instance","","Runs the client instance","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Uncompressed Minecraft packet consisting of:","","","","Build uncompressed packet","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Create a new packet for writing","Parse packet from bytes","Read a UTF-8 string","Read an 16-bit unsigned short","Read a 32-bit integer","Read a 64-bit integer","","","","","Write a UTF-8 string, prefixed with its length","Write a 32-bit integer","Write a 64-bit integer","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new server instance","Run the server","","","","","","","Read a UTF-8 string","Read a 16-bit unsigned short","Read a 32-bit integer","Read a 64-bit integer","Write a UTF-8 string, prefixed with its length","Write a 32-bit integer","Write a 64-bit integer"],"i":[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[1,2],3],[[1,2],3],[-1,-2,[],[]],[4,1],0,[1,[[7,[3,[6,[5]]]]]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[9,10],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[-1,-1,[]],0,[-1,-2,[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[2,[[13,[12]]]],[-1,-1,[]],0,[-1,-2,[],[]],0,[9,2],[[[13,[12]]],2],[2,[[15,[14]]]],[2,[[15,[16]]]],[2,[[15,[9]]]],[2,[[15,[17]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],[[2,18],3],[[2,9],3],[[2,17],3],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],19],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[-1,-2,[],[]],0,[11,20],[20,[[7,[3,[6,[5]]]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],0,0,[[[13,[12]]],[[15,[14]]]],[[[13,[12]]],[[15,[16]]]],[[[13,[12]]],[[15,[9]]]],[[[13,[12]]],[[15,[17]]]],[[18,[13,[12]]],3],[[9,[13,[12]]],3],[[17,[13,[12]]],3]],"c":[],"p":[[3,"Client",9],[3,"MCPacket",54],[15,"tuple"],[3,"TcpStream",115],[8,"Error",116],[3,"Box",117],[4,"Result",118],[3,"TypeId",119],[15,"i32"],[4,"ClientState",25],[3,"ServerConfig",40],[15,"u8"],[3,"Vec",120],[3,"String",121],[4,"Option",122],[15,"u16"],[15,"i64"],[15,"str"],[3,"Player",76],[3,"Server",93]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
