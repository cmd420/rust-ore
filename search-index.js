var searchIndex = JSON.parse('{\
"rust_ore":{"doc":"","t":"AAAAAAAAAAADLLLMLLLLMLMLMMLLLLENNNNNLLLLLLLLLRDLLLLLLLLLLINENNNNNENENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLMLLMLMLLLLLLLLLLLLLLDLLLLLLLLMLCCCCCCDLLMLLMLLLLLLRRFFFFFFFDLLLMLLLLLMMLLLLLL","n":["client","client_state","config","entity","errors","mc_packet","player","prelude","server","util","uuid","Client","borrow","borrow_mut","close","config","from","handle_handshake","handle_login","into","is_running","new","player","run","state","stream","try_from","try_into","type_id","vzip","ClientState","Configuration","Handshake","Login","Play","Status","borrow","borrow_mut","from","from","into","try_from","try_into","type_id","vzip","PROTOCOL_VERSION","ServerConfig","borrow","borrow_mut","deref","from","from_file","into","try_from","try_into","type_id","vzip","Entity","AlreadyRunning","ClientError","ExpectedField","IncorrectHost","InvalidPacketID","InvalidProtocolVersion","MissingProperty","PacketError","PacketError","ServerError","SocketBindFailed","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MCPacket","borrow","borrow_mut","data","finalize","from","id","into","length","new","parse","read_string","read_unsigned_short","read_varint","read_varlong","try_from","try_into","type_id","vzip","write_string","write_uuid","write_varint","write_varlong","Player","borrow","borrow_mut","default","from","into","try_from","try_into","type_id","username","vzip","Client","ClientState","Entity","MCPacket","Player","Server","Server","borrow","borrow_mut","config","from","into","listener","new","run","try_from","try_into","type_id","vzip","CONTINUE_BIT","SEGMENT_BITS","read_string","read_u16","read_varint","read_varlong","write_string","write_varint","write_varlong","UUID","as_ref","borrow","borrow_mut","bytes","digits","from","from_bytes","from_name","into","lsb","msb","new_rand","to_string","try_from","try_into","type_id","vzip"],"q":[[0,"rust_ore"],[11,"rust_ore::client"],[30,"rust_ore::client_state"],[45,"rust_ore::config"],[57,"rust_ore::entity"],[58,"rust_ore::errors"],[102,"rust_ore::mc_packet"],[125,"rust_ore::player"],[136,"rust_ore::prelude"],[142,"rust_ore::server"],[155,"rust_ore::util"],[164,"rust_ore::uuid"],[182,"core::result"],[183,"std::net::tcp"],[184,"alloc::sync"],[185,"core::any"],[186,"core::error"],[187,"alloc::boxed"],[188,"core::fmt"],[189,"core::fmt"],[190,"alloc::vec"],[191,"core::option"],[192,"core::convert"]],"d":["","","","","","","","","","","","","","","Closes the connection between the server and client. Sets …","","Returns the argument unchanged.","Handle handshaking","Handle the Login process","Calls <code>U::from(self)</code>.","","Creates a new instance","","Runs the client instance","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Minecraft 1.16.5 protocol version","Key value pairs containing the server configuration","","","","Returns the argument unchanged.","Parses a <code>server.properties</code> file","Calls <code>U::from(self)</code>.","","","","","","Excluding this one","Errors caused by the Minecraft client","Expected a field of a certain type","Client provided a server host different than the one …","Client provided an invalid packet ID","Client is on a different Minecraft version","Required property in server configuration is missing","Errors caused by Minecraft packets","Packet parsing error, for now","Errors caused by the server","Binding to socket failed","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Uncompressed Minecraft packet consisting of:","","","","Build uncompressed packet","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Create a new packet for writing","Parse packet from bytes","Read a UTF-8 string","Read an 16-bit unsigned short","Read a 32-bit integer","Read a 64-bit integer","","","","","Write a UTF-8 string, prefixed with its length","Write UUID bytes","Write a 32-bit integer","Write a 64-bit integer","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new server instance","Run the server","","","","","","","Read a UTF-8 string","Read a 16-bit unsigned short","Read a 32-bit integer","Read a 64-bit integer","Write a UTF-8 string, prefixed with its length","Write a 32-bit integer","Write a 64-bit integer","Universally Unique Identifier struct Stores the most and …","","","","","","Returns the argument unchanged.","Constructs a new UUID from a byte array","Constructs a new UUID from the MD5 hash of <code>name</code>","Calls <code>U::from(self)</code>.","","","Generates random bytes to then be used to construct a new …","Converts the UUID bytes to a UUID string with a format of: …","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,7,7,7,7,7,7,7,7,7,7,0,4,0,18,4,4,4,17,0,4,0,17,4,17,18,4,17,18,4,4,17,17,18,18,4,17,18,4,17,18,4,17,18,4,17,18,4,17,18,4,17,18,4,17,18,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,2],0,[-1,-1,[]],[[1,3],[[5,[2,4]]]],[[1,3],[[5,[2,4]]]],[-1,-2,[],[]],0,[[6,[8,[7]]],1],0,[1,[[5,[2,4]]]],0,0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[10,11],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[7],[-1,-1,[]],[12,[[5,[7,[14,[13]]]]]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,15],16],[[4,15],16],[[17,15],16],[[17,15],16],[[18,15],16],[[18,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[3,[[21,[20]]]],[-1,-1,[]],0,[-1,-2,[],[]],0,[10,3],[[[21,[20]]],[[5,[3,18]]]],[3,[[22,[19]]]],[3,[[22,[23]]]],[3,[[22,[10]]]],[3,[[22,[24]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],[[3,12],2],[[3,-1],2,[[26,[[25,[20]]]]]],[[3,10],2],[[3,24],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],27],[-1,-1,[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,9,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[-1,-2,[],[]],0,[7,[[5,[28,17]]]],[28,2],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,[[[21,[20]]],[[22,[19]]]],[[[21,[20]]],[[22,[23]]]],[[[21,[20]]],[[22,[10]]]],[[[21,[20]]],[[22,[24]]]],[[12,[21,[20]]],2],[[10,[21,[20]]],2],[[24,[21,[20]]],2],0,[29,[[25,[20]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[24,30],19],[-1,-1,[]],[[[25,[20]]],29],[12,29],[-1,-2,[],[]],0,0,[[],29],[29,19],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Client",11],[15,"tuple"],[3,"MCPacket",102],[4,"ClientError",58],[4,"Result",182],[3,"TcpStream",183],[3,"ServerConfig",45],[3,"Arc",184],[3,"TypeId",185],[15,"i32"],[4,"ClientState",30],[15,"str"],[8,"Error",186],[3,"Box",187],[3,"Formatter",188],[6,"Result",188],[4,"ServerError",58],[4,"PacketError",58],[3,"String",189],[15,"u8"],[3,"Vec",190],[4,"Option",191],[15,"u16"],[15,"i64"],[15,"array"],[8,"AsRef",192],[3,"Player",125],[3,"Server",142],[3,"UUID",164],[15,"usize"]],"b":[[75,"impl-Debug-for-ClientError"],[76,"impl-Display-for-ClientError"],[77,"impl-Display-for-ServerError"],[78,"impl-Debug-for-ServerError"],[79,"impl-Debug-for-PacketError"],[80,"impl-Display-for-PacketError"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
