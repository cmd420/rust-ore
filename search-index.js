var searchIndex = JSON.parse('{\
"rust_ore":{"doc":"","t":"AAAAAAAAAADLLLMLLLLMLMLMMLLLLENNNNNLLLLLLLLLRDLLLLMLMMLLLLIDLLMLLMLMLLLLLLLLLLLLLLDLLLLLLLLMLCCCCCCDLLMLLMLLLLLLRRFFFFFFFDLLLMLLLLLMMLLLLLL","n":["client","client_state","config","entity","mc_packet","player","prelude","server","util","uuid","Client","borrow","borrow_mut","close","config","from","handle_handshake","handle_login","into","is_running","new","player","run","state","stream","try_from","try_into","type_id","vzip","ClientState","Configuration","Handshake","Login","Play","Status","borrow","borrow_mut","from","from","into","try_from","try_into","type_id","vzip","PROTOCOL_VERSION","ServerConfig","borrow","borrow_mut","default","from","host","into","online_mode","port","try_from","try_into","type_id","vzip","Entity","MCPacket","borrow","borrow_mut","data","finalize","from","id","into","length","new","parse","read_string","read_unsigned_short","read_varint","read_varlong","try_from","try_into","type_id","vzip","write_string","write_uuid","write_varint","write_varlong","Player","borrow","borrow_mut","default","from","into","try_from","try_into","type_id","username","vzip","Client","ClientState","Entity","MCPacket","Player","Server","Server","borrow","borrow_mut","config","from","into","listener","new","run","try_from","try_into","type_id","vzip","CONTINUE_BIT","SEGMENT_BITS","read_string","read_u16","read_varint","read_varlong","write_string","write_varint","write_varlong","UUID","as_ref","borrow","borrow_mut","bytes","digits","from","from_bytes","from_name","into","lsb","msb","new_rand","to_string","try_from","try_into","type_id","vzip"],"q":[[0,"rust_ore"],[10,"rust_ore::client"],[29,"rust_ore::client_state"],[44,"rust_ore::config"],[58,"rust_ore::entity"],[59,"rust_ore::mc_packet"],[82,"rust_ore::player"],[93,"rust_ore::prelude"],[99,"rust_ore::server"],[112,"rust_ore::util"],[121,"rust_ore::uuid"],[139,"std::net::tcp"],[140,"alloc::sync"],[141,"core::error"],[142,"alloc::boxed"],[143,"core::result"],[144,"core::any"],[145,"alloc::vec"],[146,"alloc::string"],[147,"core::option"],[148,"core::convert"]],"d":["","","","","","","","","","","","","","Closes the connection between the server and client. Sets …","","Returns the argument unchanged.","Handle handshaking","Handle the Login process","Calls <code>U::from(self)</code>.","","Creates a new instance","","Runs the client instance","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Minecraft 1.16.5 protocol version","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Uncompressed Minecraft packet consisting of:","","","","Build uncompressed packet","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Create a new packet for writing","Parse packet from bytes","Read a UTF-8 string","Read an 16-bit unsigned short","Read a 32-bit integer","Read a 64-bit integer","","","","","Write a UTF-8 string, prefixed with its length","Write UUID bytes","Write a 32-bit integer","Write a 64-bit integer","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new server instance","Run the server","","","","","","","Read a UTF-8 string","Read a 16-bit unsigned short","Read a 32-bit integer","Read a 64-bit integer","Write a UTF-8 string, prefixed with its length","Write a 32-bit integer","Write a 64-bit integer","Universally Unique Identifier struct Stores the most and …","","","","","","Returns the argument unchanged.","Constructs a new UUID from a byte array","Constructs a new UUID from the MD5 hash of <code>name</code>","Calls <code>U::from(self)</code>.","","","Generates random bytes to then be used to construct a new …","Converts the UUID bytes to a UUID string with a format of: …","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24],"f":[0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,2],0,[-1,-1,[]],[[1,3],2],[[1,3],2],[-1,-2,[],[]],0,[[4,[6,[5]]],1],0,[1,[[9,[2,[8,[7]]]]]],0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[11,12],[-1,-1,[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],5],[-1,-1,[]],0,[-1,-2,[],[]],0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[3,[[14,[13]]]],[-1,-1,[]],0,[-1,-2,[],[]],0,[11,3],[[[14,[13]]],3],[3,[[16,[15]]]],[3,[[16,[17]]]],[3,[[16,[11]]]],[3,[[16,[18]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],[[3,19],2],[[3,-1],2,[[21,[[20,[13]]]]]],[[3,11],2],[[3,18],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],22],[-1,-1,[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[-1,-2,[],[]],0,[5,23],[23,[[9,[2,[8,[7]]]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,[[[14,[13]]],[[16,[15]]]],[[[14,[13]]],[[16,[17]]]],[[[14,[13]]],[[16,[11]]]],[[[14,[13]]],[[16,[18]]]],[[19,[14,[13]]],2],[[11,[14,[13]]],2],[[18,[14,[13]]],2],0,[24,[[20,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[18,25],15],[-1,-1,[]],[[[20,[13]]],24],[19,24],[-1,-2,[],[]],0,0,[[],24],[24,15],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Client",10],[15,"tuple"],[3,"MCPacket",59],[3,"TcpStream",139],[3,"ServerConfig",44],[3,"Arc",140],[8,"Error",141],[3,"Box",142],[4,"Result",143],[3,"TypeId",144],[15,"i32"],[4,"ClientState",29],[15,"u8"],[3,"Vec",145],[3,"String",146],[4,"Option",147],[15,"u16"],[15,"i64"],[15,"str"],[15,"array"],[8,"AsRef",148],[3,"Player",82],[3,"Server",99],[3,"UUID",121],[15,"usize"]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
